package database;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;
import org.greenrobot.greendao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table "PERSON".
 */
public class PersonDao extends AbstractDao<Person, Long> {

    public static final String TABLENAME = "PERSON";

    public PersonDao(DaoConfig config) {
        super(config);
    }


    public PersonDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

	/**
	 * Creates the underlying database table.
	 */
	public static void createTable(Database db, boolean ifNotExists) {
		String constraint = ifNotExists ? "IF NOT EXISTS " : "";
		db.execSQL("CREATE TABLE " + constraint + "\"PERSON\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"DOCUMENT_TYPE\" TEXT," + // 1: DocumentType
                "\"PERSON_LOCAL_UID\" TEXT," + // 2: PersonLocalUID
                "\"LAST_NAME\" TEXT," + // 3: LastName
                "\"FIRST_NAME\" TEXT," + // 4: FirstName
                "\"FATHER_NAME\" TEXT," + // 5: FatherName
                "\"BIRTH_DATE\" INTEGER," + // 6: BirthDate
                "\"COUNTRY_UID\" TEXT," + // 7: CountryUID
                "\"NEED_PATENT_OR_PERMISSION\" INTEGER," + // 8: NeedPatentOrPermission
                "\"SEX\" TEXT," + // 9: Sex
                "\"PASSPORT_NUMBER\" TEXT," + // 10: PassportNumber
                "\"PASSPORT_ISSUE\" INTEGER," + // 11: PassportIssue
                "\"PHONE_NUMBER\" TEXT," + // 12: PhoneNumber
                "\"PERMISSION_SERIA\" TEXT," + // 13: PermissionSeria
                "\"PERMISSION_NUMBER\" TEXT," + // 14: PermissionNumber
                "\"PERMISSION_EXPIRY\" INTEGER," + // 15: PermissionExpiry
                "\"PATENT_NUMBER\" TEXT," + // 16: PatentNumber
                "\"PATENT_ISSUE\" INTEGER," + // 17: PatentIssue
                "\"PATENT_EXPIRY\" INTEGER," + // 18: PatentExpiry
                "\"SUBDIVISION_UID\" TEXT," + // 19: SubdivisionUID
                "\"REGION_UID\" TEXT," + // 20: RegionUID
                "\"SUBDIVISION_NAME\" TEXT," + // 21: SubdivisionName
                "\"JOB_TITLE_UID\" TEXT," + // 22: JobTitleUID
                "\"JOB_TITLE_NAME\" TEXT," + // 23: JobTitleName
                "\"BANK_UID\" TEXT," + // 24: BankUID
                "\"BANK_NAME\" TEXT," + // 25: BankName
                "\"BANK_DATE\" INTEGER," + // 26: BankDate
                "\"BIND_DATE\" INTEGER," + // 27: BindDate
                "\"PERSON_UID\" TEXT," + // 28: PersonUID
                "\"PERSON_NAME\" TEXT," + // 29: PersonName
                "\"CARD\" INTEGER," + // 30: Card
                "\"DISMISS_DATE\" INTEGER," + // 31: DismissDate
                "\"DISMISS_REASON_UID\" TEXT," + // 32: DismissReasonUID
                "\"DISMISS_REASON_NAME\" TEXT);"); // 33: DismissReasonName
	}

	/**
	 * Drops the underlying database table.
	 */
	public static void dropTable(Database db, boolean ifExists) {
		String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"PERSON\"";
        db.execSQL(sql);
	}

	@Override
	protected final void bindValues(DatabaseStatement stmt, Person entity) {
		stmt.clearBindings();

        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }

        String DocumentType = entity.getDocumentType();
        if (DocumentType != null) {
            stmt.bindString(2, DocumentType);
        }

        String PersonLocalUID = entity.getPersonLocalUID();
        if (PersonLocalUID != null) {
            stmt.bindString(3, PersonLocalUID);
        }

        String LastName = entity.getLastName();
        if (LastName != null) {
            stmt.bindString(4, LastName);
        }

        String FirstName = entity.getFirstName();
        if (FirstName != null) {
            stmt.bindString(5, FirstName);
        }

        String FatherName = entity.getFatherName();
        if (FatherName != null) {
            stmt.bindString(6, FatherName);
        }

        java.util.Date BirthDate = entity.getBirthDate();
        if (BirthDate != null) {
            stmt.bindLong(7, BirthDate.getTime());
        }

        String CountryUID = entity.getCountryUID();
        if (CountryUID != null) {
            stmt.bindString(8, CountryUID);
        }

        Integer NeedPatentOrPermission = entity.getNeedPatentOrPermission();
        if (NeedPatentOrPermission != null) {
            stmt.bindLong(9, NeedPatentOrPermission);
        }

        String Sex = entity.getSex();
        if (Sex != null) {
            stmt.bindString(10, Sex);
        }

        String PassportNumber = entity.getPassportNumber();
        if (PassportNumber != null) {
            stmt.bindString(11, PassportNumber);
        }

        java.util.Date PassportIssue = entity.getPassportIssue();
        if (PassportIssue != null) {
            stmt.bindLong(12, PassportIssue.getTime());
        }

        String PhoneNumber = entity.getPhoneNumber();
        if (PhoneNumber != null) {
            stmt.bindString(13, PhoneNumber);
        }

        String PermissionSeria = entity.getPermissionSeria();
        if (PermissionSeria != null) {
            stmt.bindString(14, PermissionSeria);
        }

        String PermissionNumber = entity.getPermissionNumber();
        if (PermissionNumber != null) {
            stmt.bindString(15, PermissionNumber);
        }

        java.util.Date PermissionExpiry = entity.getPermissionExpiry();
        if (PermissionExpiry != null) {
            stmt.bindLong(16, PermissionExpiry.getTime());
        }

        String PatentNumber = entity.getPatentNumber();
        if (PatentNumber != null) {
            stmt.bindString(17, PatentNumber);
        }

        java.util.Date PatentIssue = entity.getPatentIssue();
        if (PatentIssue != null) {
            stmt.bindLong(18, PatentIssue.getTime());
        }

        java.util.Date PatentExpiry = entity.getPatentExpiry();
        if (PatentExpiry != null) {
            stmt.bindLong(19, PatentExpiry.getTime());
        }

        String SubdivisionUID = entity.getSubdivisionUID();
        if (SubdivisionUID != null) {
            stmt.bindString(20, SubdivisionUID);
        }

        String RegionUID = entity.getRegionUID();
        if (RegionUID != null) {
            stmt.bindString(21, RegionUID);
        }

        String SubdivisionName = entity.getSubdivisionName();
        if (SubdivisionName != null) {
            stmt.bindString(22, SubdivisionName);
        }

        String JobTitleUID = entity.getJobTitleUID();
        if (JobTitleUID != null) {
            stmt.bindString(23, JobTitleUID);
        }

        String JobTitleName = entity.getJobTitleName();
        if (JobTitleName != null) {
            stmt.bindString(24, JobTitleName);
        }

        String BankUID = entity.getBankUID();
        if (BankUID != null) {
            stmt.bindString(25, BankUID);
        }

        String BankName = entity.getBankName();
        if (BankName != null) {
            stmt.bindString(26, BankName);
        }

        java.util.Date BankDate = entity.getBankDate();
        if (BankDate != null) {
            stmt.bindLong(27, BankDate.getTime());
        }

        java.util.Date BindDate = entity.getBindDate();
        if (BindDate != null) {
            stmt.bindLong(28, BindDate.getTime());
        }

        String PersonUID = entity.getPersonUID();
        if (PersonUID != null) {
            stmt.bindString(29, PersonUID);
        }

        String PersonName = entity.getPersonName();
        if (PersonName != null) {
            stmt.bindString(30, PersonName);
        }

        Boolean Card = entity.getCard();
		if (Card != null) {
			stmt.bindLong(31, Card ? 1L: 0L);
		}

        java.util.Date DismissDate = entity.getDismissDate();
        if (DismissDate != null) {
            stmt.bindLong(32, DismissDate.getTime());
        }

        String DismissReasonUID = entity.getDismissReasonUID();
        if (DismissReasonUID != null) {
            stmt.bindString(33, DismissReasonUID);
        }

        String DismissReasonName = entity.getDismissReasonName();
        if (DismissReasonName != null) {
            stmt.bindString(34, DismissReasonName);
        }
	}

	@Override
	protected final void bindValues(SQLiteStatement stmt, Person entity) {
		stmt.clearBindings();

		Long id = entity.getId();
		if (id != null) {
			stmt.bindLong(1, id);
		}

		String DocumentType = entity.getDocumentType();
		if (DocumentType != null) {
			stmt.bindString(2, DocumentType);
		}

		String PersonLocalUID = entity.getPersonLocalUID();
		if (PersonLocalUID != null) {
			stmt.bindString(3, PersonLocalUID);
		}

		String LastName = entity.getLastName();
		if (LastName != null) {
			stmt.bindString(4, LastName);
		}

		String FirstName = entity.getFirstName();
		if (FirstName != null) {
			stmt.bindString(5, FirstName);
		}

		String FatherName = entity.getFatherName();
		if (FatherName != null) {
			stmt.bindString(6, FatherName);
		}

		java.util.Date BirthDate = entity.getBirthDate();
		if (BirthDate != null) {
			stmt.bindLong(7, BirthDate.getTime());
		}

		String CountryUID = entity.getCountryUID();
		if (CountryUID != null) {
			stmt.bindString(8, CountryUID);
		}

		Integer NeedPatentOrPermission = entity.getNeedPatentOrPermission();
		if (NeedPatentOrPermission != null) {
			stmt.bindLong(9, NeedPatentOrPermission);
		}

		String Sex = entity.getSex();
		if (Sex != null) {
			stmt.bindString(10, Sex);
		}

		String PassportNumber = entity.getPassportNumber();
		if (PassportNumber != null) {
			stmt.bindString(11, PassportNumber);
		}

		java.util.Date PassportIssue = entity.getPassportIssue();
		if (PassportIssue != null) {
			stmt.bindLong(12, PassportIssue.getTime());
		}

		String PhoneNumber = entity.getPhoneNumber();
		if (PhoneNumber != null) {
			stmt.bindString(13, PhoneNumber);
		}

		String PermissionSeria = entity.getPermissionSeria();
		if (PermissionSeria != null) {
			stmt.bindString(14, PermissionSeria);
		}

		String PermissionNumber = entity.getPermissionNumber();
		if (PermissionNumber != null) {
			stmt.bindString(15, PermissionNumber);
		}

		java.util.Date PermissionExpiry = entity.getPermissionExpiry();
		if (PermissionExpiry != null) {
			stmt.bindLong(16, PermissionExpiry.getTime());
		}

		String PatentNumber = entity.getPatentNumber();
		if (PatentNumber != null) {
			stmt.bindString(17, PatentNumber);
		}

		java.util.Date PatentIssue = entity.getPatentIssue();
		if (PatentIssue != null) {
			stmt.bindLong(18, PatentIssue.getTime());
		}

		java.util.Date PatentExpiry = entity.getPatentExpiry();
		if (PatentExpiry != null) {
			stmt.bindLong(19, PatentExpiry.getTime());
		}

		String SubdivisionUID = entity.getSubdivisionUID();
		if (SubdivisionUID != null) {
			stmt.bindString(20, SubdivisionUID);
		}

		String RegionUID = entity.getRegionUID();
		if (RegionUID != null) {
			stmt.bindString(21, RegionUID);
		}

		String SubdivisionName = entity.getSubdivisionName();
		if (SubdivisionName != null) {
			stmt.bindString(22, SubdivisionName);
		}

		String JobTitleUID = entity.getJobTitleUID();
		if (JobTitleUID != null) {
			stmt.bindString(23, JobTitleUID);
		}

		String JobTitleName = entity.getJobTitleName();
		if (JobTitleName != null) {
			stmt.bindString(24, JobTitleName);
		}

		String BankUID = entity.getBankUID();
		if (BankUID != null) {
			stmt.bindString(25, BankUID);
		}

		String BankName = entity.getBankName();
		if (BankName != null) {
			stmt.bindString(26, BankName);
		}

		java.util.Date BankDate = entity.getBankDate();
		if (BankDate != null) {
			stmt.bindLong(27, BankDate.getTime());
		}

		java.util.Date BindDate = entity.getBindDate();
		if (BindDate != null) {
			stmt.bindLong(28, BindDate.getTime());
		}

		String PersonUID = entity.getPersonUID();
		if (PersonUID != null) {
			stmt.bindString(29, PersonUID);
		}

		String PersonName = entity.getPersonName();
		if (PersonName != null) {
			stmt.bindString(30, PersonName);
		}

		Boolean Card = entity.getCard();
		if (Card != null) {
			stmt.bindLong(31, Card ? 1L : 0L);
		}

		java.util.Date DismissDate = entity.getDismissDate();
		if (DismissDate != null) {
			stmt.bindLong(32, DismissDate.getTime());
		}

		String DismissReasonUID = entity.getDismissReasonUID();
		if (DismissReasonUID != null) {
			stmt.bindString(33, DismissReasonUID);
		}

		String DismissReasonName = entity.getDismissReasonName();
		if (DismissReasonName != null) {
			stmt.bindString(34, DismissReasonName);
		}
	}

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }

    @Override
    public Person readEntity(Cursor cursor, int offset) {
        Person entity = new Person( //
		        cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
		        cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // DocumentType
		        cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // PersonLocalUID
		        cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // LastName
		        cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // FirstName
		        cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // FatherName
		        cursor.isNull(offset + 6) ? null : new java.util.Date(cursor.getLong(offset + 6)), // BirthDate
		        cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // CountryUID
		        cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // NeedPatentOrPermission
		        cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // Sex
		        cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // PassportNumber
		        cursor.isNull(offset + 11) ? null : new java.util.Date(cursor.getLong(offset + 11)), // PassportIssue
		        cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // PhoneNumber
		        cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // PermissionSeria
		        cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // PermissionNumber
		        cursor.isNull(offset + 15) ? null : new java.util.Date(cursor.getLong(offset + 15)), // PermissionExpiry
		        cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // PatentNumber
		        cursor.isNull(offset + 17) ? null : new java.util.Date(cursor.getLong(offset + 17)), // PatentIssue
		        cursor.isNull(offset + 18) ? null : new java.util.Date(cursor.getLong(offset + 18)), // PatentExpiry
		        cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // SubdivisionUID
		        cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // RegionUID
		        cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // SubdivisionName
		        cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // JobTitleUID
		        cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // JobTitleName
		        cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // BankUID
		        cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // BankName
		        cursor.isNull(offset + 26) ? null : new java.util.Date(cursor.getLong(offset + 26)), // BankDate
		        cursor.isNull(offset + 27) ? null : new java.util.Date(cursor.getLong(offset + 27)), // BindDate
		        cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // PersonUID
		        cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // PersonName
		        cursor.isNull(offset + 30) ? null : cursor.getShort(offset + 30) != 0, // Card
		        cursor.isNull(offset + 31) ? null : new java.util.Date(cursor.getLong(offset + 31)), // DismissDate
		        cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // DismissReasonUID
		        cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33) // DismissReasonName
        );
        return entity;
    }

    @Override
    public void readEntity(Cursor cursor, Person entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setDocumentType(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setPersonLocalUID(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setLastName(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setFirstName(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setFatherName(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setBirthDate(cursor.isNull(offset + 6) ? null : new java.util.Date(cursor.getLong(offset + 6)));
        entity.setCountryUID(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setNeedPatentOrPermission(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setSex(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setPassportNumber(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setPassportIssue(cursor.isNull(offset + 11) ? null : new java.util.Date(cursor.getLong(offset + 11)));
        entity.setPhoneNumber(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setPermissionSeria(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setPermissionNumber(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setPermissionExpiry(cursor.isNull(offset + 15) ? null : new java.util.Date(cursor.getLong(offset + 15)));
        entity.setPatentNumber(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setPatentIssue(cursor.isNull(offset + 17) ? null : new java.util.Date(cursor.getLong(offset + 17)));
        entity.setPatentExpiry(cursor.isNull(offset + 18) ? null : new java.util.Date(cursor.getLong(offset + 18)));
        entity.setSubdivisionUID(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setRegionUID(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setSubdivisionName(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setJobTitleUID(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setJobTitleName(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setBankUID(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setBankName(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setBankDate(cursor.isNull(offset + 26) ? null : new java.util.Date(cursor.getLong(offset + 26)));
        entity.setBindDate(cursor.isNull(offset + 27) ? null : new java.util.Date(cursor.getLong(offset + 27)));
        entity.setPersonUID(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setPersonName(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setCard(cursor.isNull(offset + 30) ? null : cursor.getShort(offset + 30) != 0);
        entity.setDismissDate(cursor.isNull(offset + 31) ? null : new java.util.Date(cursor.getLong(offset + 31)));
        entity.setDismissReasonUID(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setDismissReasonName(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
    }

	@Override
	protected final Long updateKeyAfterInsert(Person entity, long rowId) {
		entity.setId(rowId);
		return rowId;
    }
    
    @Override
    public Long getKey(Person entity) {
	    if(entity != null) {
		    return entity.getId();
        } else {
            return null;
	    }
    }

	@Override
	public boolean hasKey(Person entity) {
		return entity.getId() != null;
	}

	@Override
	protected final boolean isEntityUpdateable() {
		return true;
    }

    /**
     * Properties of entity Person.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property DocumentType = new Property(1, String.class, "DocumentType", false, "DOCUMENT_TYPE");
        public final static Property PersonLocalUID = new Property(2, String.class, "PersonLocalUID", false, "PERSON_LOCAL_UID");
        public final static Property LastName = new Property(3, String.class, "LastName", false, "LAST_NAME");
        public final static Property FirstName = new Property(4, String.class, "FirstName", false, "FIRST_NAME");
        public final static Property FatherName = new Property(5, String.class, "FatherName", false, "FATHER_NAME");
        public final static Property BirthDate = new Property(6, java.util.Date.class, "BirthDate", false, "BIRTH_DATE");
        public final static Property CountryUID = new Property(7, String.class, "CountryUID", false, "COUNTRY_UID");
        public final static Property NeedPatentOrPermission = new Property(8, Integer.class, "NeedPatentOrPermission", false, "NEED_PATENT_OR_PERMISSION");
        public final static Property Sex = new Property(9, String.class, "Sex", false, "SEX");
        public final static Property PassportNumber = new Property(10, String.class, "PassportNumber", false, "PASSPORT_NUMBER");
        public final static Property PassportIssue = new Property(11, java.util.Date.class, "PassportIssue", false, "PASSPORT_ISSUE");
        public final static Property PhoneNumber = new Property(12, String.class, "PhoneNumber", false, "PHONE_NUMBER");
        public final static Property PermissionSeria = new Property(13, String.class, "PermissionSeria", false, "PERMISSION_SERIA");
        public final static Property PermissionNumber = new Property(14, String.class, "PermissionNumber", false, "PERMISSION_NUMBER");
        public final static Property PermissionExpiry = new Property(15, java.util.Date.class, "PermissionExpiry", false, "PERMISSION_EXPIRY");
        public final static Property PatentNumber = new Property(16, String.class, "PatentNumber", false, "PATENT_NUMBER");
        public final static Property PatentIssue = new Property(17, java.util.Date.class, "PatentIssue", false, "PATENT_ISSUE");
        public final static Property PatentExpiry = new Property(18, java.util.Date.class, "PatentExpiry", false, "PATENT_EXPIRY");
        public final static Property SubdivisionUID = new Property(19, String.class, "SubdivisionUID", false, "SUBDIVISION_UID");
        public final static Property RegionUID = new Property(20, String.class, "RegionUID", false, "REGION_UID");
        public final static Property SubdivisionName = new Property(21, String.class, "SubdivisionName", false, "SUBDIVISION_NAME");
        public final static Property JobTitleUID = new Property(22, String.class, "JobTitleUID", false, "JOB_TITLE_UID");
        public final static Property JobTitleName = new Property(23, String.class, "JobTitleName", false, "JOB_TITLE_NAME");
        public final static Property BankUID = new Property(24, String.class, "BankUID", false, "BANK_UID");
        public final static Property BankName = new Property(25, String.class, "BankName", false, "BANK_NAME");
        public final static Property BankDate = new Property(26, java.util.Date.class, "BankDate", false, "BANK_DATE");
        public final static Property BindDate = new Property(27, java.util.Date.class, "BindDate", false, "BIND_DATE");
        public final static Property PersonUID = new Property(28, String.class, "PersonUID", false, "PERSON_UID");
        public final static Property PersonName = new Property(29, String.class, "PersonName", false, "PERSON_NAME");
        public final static Property Card = new Property(30, Boolean.class, "Card", false, "CARD");
        public final static Property DismissDate = new Property(31, java.util.Date.class, "DismissDate", false, "DISMISS_DATE");
        public final static Property DismissReasonUID = new Property(32, String.class, "DismissReasonUID", false, "DISMISS_REASON_UID");
        public final static Property DismissReasonName = new Property(33, String.class, "DismissReasonName", false, "DISMISS_REASON_NAME");
    }
    
}
